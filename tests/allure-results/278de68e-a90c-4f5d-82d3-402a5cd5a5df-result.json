{"name": "Тест на проверку вопросов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.JavascriptException: Message: TypeError: arguments[0].scrollIntoView is not a function\nStacktrace:\n@https://qa-scooter.praktikum-services.ru/:2:20\n@https://qa-scooter.praktikum-services.ru/:3:8", "trace": "self = <tests.test_main_page.TestMainPage object at 0x10d860980>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"16ca1d46-f149-45dd-8a42-d5e5f07b9f2f\")>, num = 0\nresult = 'Сутки — 400 рублей. Оплата курьеру — наличными или картой.'\n\n    @allure.title('Тест на проверку вопросов')\n    @pytest.mark.parametrize(\"num, result\", questions_and_answers)\n    def test_questions_and_answers(self, driver, num, result):\n        # Создаём объект страницы\n        main_page = MainPage(driver)\n        main_page.open_main_page()\n        main_page.click_to_cookie_button()\n>       main_page.click_to_question(num)\n\ntest_main_page.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/main_page.py:27: in click_to_question\n    self.driver.execute_script(\"arguments[0].scrollIntoView({block: 'center', inline: 'nearest'});\",MainPageLocators.QUESTION_LOCATOR_TO_SCROLL)\n../venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10dabfe00>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"javascript error\",\"message\":\"TypeError: arguments[0].scrollIntoView is no...,\"stacktrace\":\"@https://qa-scooter.praktikum-services.ru/:2:20\\\\n@https://qa-scooter.praktikum-services.ru/:3:8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.JavascriptException: Message: TypeError: arguments[0].scrollIntoView is not a function\nE       Stacktrace:\nE       @https://qa-scooter.praktikum-services.ru/:2:20\nE       @https://qa-scooter.praktikum-services.ru/:3:8\n\n../venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: JavascriptException"}, "steps": [{"name": "Отрытие главной страницы", "status": "passed", "start": 1732324243322, "stop": 1732324249044}, {"name": "Клик на кнопку принятия куки", "status": "passed", "start": 1732324249045, "stop": 1732324249304}, {"name": "Клик на вопрос", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.JavascriptException: Message: TypeError: arguments[0].scrollIntoView is not a function\nStacktrace:\n@https://qa-scooter.praktikum-services.ru/:2:20\n@https://qa-scooter.praktikum-services.ru/:3:8\n\n", "trace": "  File \"/Users/dmitrijlosunov/PycharmProjects/Sprint_6/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/dmitrijlosunov/PycharmProjects/Sprint_6/pages/main_page.py\", line 27, in click_to_question\n    self.driver.execute_script(\"arguments[0].scrollIntoView({block: 'center', inline: 'nearest'});\",MainPageLocators.QUESTION_LOCATOR_TO_SCROLL)\n  File \"/Users/dmitrijlosunov/PycharmProjects/Sprint_6/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/dmitrijlosunov/PycharmProjects/Sprint_6/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 380, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/dmitrijlosunov/PycharmProjects/Sprint_6/venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "num", "value": "0"}], "start": 1732324249305, "stop": 1732324249321}], "parameters": [{"name": "num", "value": "0"}, {"name": "result", "value": "'Сутки — 400 рублей. Оплата курьеру — наличными или картой.'"}], "start": 1732324243321, "stop": 1732324249337, "uuid": "165491f0-af76-401c-a18f-ebff26d38055", "historyId": "c2b9f63ca48803644714669d5b65875a", "testCaseId": "15a780a1843a61a69f4ae648afdb7c35", "fullName": "test_main_page.TestMainPage#test_questions_and_answers", "labels": [{"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "MBP-Dmitrij.lan"}, {"name": "thread", "value": "5006-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main_page"}]}